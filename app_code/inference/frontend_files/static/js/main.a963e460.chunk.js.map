{"version":3,"sources":["har-view.js","App.js","serviceWorker.js","index.js"],"names":["BorderLinearProgress","withStyles","root","height","LinearProgress","WebSocketClient","this","autoReconnectInterval","prototype","open","url","undefined","instance","readyState","console","log","WebSocket","onopen","event","onmessage","onclose","e","reconnect","onerror","send","data","option","emit","that","setTimeout","arguments","HARView","props","state","progress","text","img_src","progress_timer","progress_interval","progress_max","progress_tick","socket","window","location","hostname","type","charAt","msg","slice","setState","startProgress","clearInterval","setInterval","val","Math","min","bind","classes","className","content","imgDiv","img","alt","src","Paper","textPaper","Typography","variant","value","React","Component","theme","display","flexDirection","justifyContent","alignItems","width","flex","position","margin","maxHeight","maxWidth","bottom","left","textAlign","opacity","padding","spacing","App","handleClick","items","title","subitems","drawer","map","item","ListItem","button","onClick","ListItemText","primary","Collapse","in","timeout","unmountOnExit","List","component","disablePadding","s_item","nested","CssBaseline","Drawer","anchor","paper","drawerPaper","Divider","toolbar","mixins","flexShrink","flexGrow","backgroundColor","palette","action","selected","paddingLeft","Boolean","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a963e460.chunk.js","sourcesContent":["import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%'\n  },\n  content: {\n    flex: '1 1 auto'\n  },\n  imgDiv: {\n    position: 'relative'\n  },\n  img: {\n    margin: 'auto',\n    display: 'block',\n    maxHeight: '90vh',\n    maxWidth: '100%',\n  },\n  textPaper: {\n    position: 'absolute',\n    bottom: '3%',\n    left: '15%',\n    width: '70%',\n    textAlign: 'center',\n    opacity: 0.8,\n  },\n  text: {\n    padding: theme.spacing(2),\n  },\n});\n\nconst BorderLinearProgress = withStyles({\n  root: {\n    height: 30,\n  },\n})(LinearProgress);\n\n\n\nfunction WebSocketClient(){\n  this.autoReconnectInterval = 5*1000;  // ms\n}\n\nWebSocketClient.prototype.open = function(url){\n  this.url = url;\n  if (this.instance !== undefined && this.instance.readyState < 2) {\n    console.log(\"already opened\");\n    return;\n  }\n  this.instance = new WebSocket(this.url);\n  this.instance.onopen = event => {\n    this.onopen();\n  };\n  this.instance.onmessage = event =>{\n    this.onmessage(event);\n  };\n  this.instance.onclose = (e)=>{\n    this.reconnect(e);\n    this.onclose(e);\n  };\n  this.instance.onerror = e => {\n    this.reconnect(e);\n  };\n}\nWebSocketClient.prototype.send = function(data,option){\n  try{\n    this.instance.send(data,option);\n  }catch (e){\n    this.instance.emit('error',e);\n  }\n}\nWebSocketClient.prototype.reconnect = function(e){\n  console.log(`WebSocketClient: retry in ${this.autoReconnectInterval}ms`,e);\n  var that = this;\n  setTimeout(function(){\n    console.log(\"WebSocketClient: reconnecting...\");\n    that.open(that.url);\n  },this.autoReconnectInterval);\n}\nWebSocketClient.prototype.onopen = function(e){ console.log(\"WebSocketClient: open\",arguments); }\nWebSocketClient.prototype.onmessage = function(e){  console.log(\"WebSocketClient: message\",e);  }\nWebSocketClient.prototype.onerror = function(e){  console.log(\"WebSocketClient: error\",arguments);  }\nWebSocketClient.prototype.onclose = function(e){  console.log(\"WebSocketClient: closed\",arguments); }\n\n\n\nclass HARView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      progress: 0,\n      text: \"Beep\",\n      img_src: \"https://www.robotnik.eu/web/wp-content/uploads//2013/10/Roboy.jpg\",\n    }\n\n    this.progress_timer = undefined;\n    this.progress_interval = 100; // update each 100 ms\n    this.progress_max = 79 * 40;\n    this.progress_tick = 100 / (this.progress_max / 100);\n\n    this.socket = new WebSocketClient()\n    this.socket.open(`ws://${window.location.hostname}:8765`)\n\n    this.socket.onclose = event => {\n    }\n\n    this.socket.onmessage = (event) => {\n      let type = event.data.charAt(0);\n      let msg = event.data.slice(1);\n\n      switch(type) {\n        case '0':\n          this.setState({ img_src: msg });\n          break;\n        case '1':\n          this.startProgress();\n          break;\n        case '3':\n          this.setState({ text: msg });\n          break;\n        default:\n          console.log(event.data);\n      }\n    };\n  }\n\n  startProgress() {\n    if (this.state.progress_timer !== undefined) {\n      clearInterval(this.progress_timer);\n    }\n\n    this.setState({ progress: 0 });\n\n    function progress() {\n      const val = Math.min(this.state.progress + this.progress_tick, 100);\n      this.setState({ progress: val });\n      if (this.state.progress === 100) {\n        clearInterval(this.progress_timer);\n        setTimeout(() => this.setState({ progress: 0 }), 700);\n      }\n    }\n\n    this.progress_timer = setInterval(progress.bind(this), this.progress_interval);\n  }\n\n  componentDidMount() {\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.progress_timer);\n  }\n\n  componentDidUpdate() {\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <div className={classes.content}>\n          <div className={classes.imgDiv}>\n            <img className={classes.img} alt=\"camera\" src={this.state.img_src}/>\n            <Paper className={classes.textPaper}>\n              <Typography variant=\"h2\" className={classes.text}>{this.state.text}</Typography>\n            </Paper>\n          </div>\n          <BorderLinearProgress variant=\"determinate\" value={this.state.progress} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(HARView);\n","import React from 'react';\n// import Button from \"@material-ui/core/Button\";\nimport { withStyles } from '@material-ui/core/styles';\n// import { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\n// import ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\n// import Typography from '@material-ui/core/Typography';\n\nimport HARView from './har-view.js';\n\n\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: theme.mixins.toolbar,\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n  item: {\n    backgroundColor: theme.palette.action.selected\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n});\n\n\nfunction getItems() {\n  return [\n    {\n      title: \"Sport\",\n      subitems: [\n        \"Archery\", \"Bowling\", \"Kicking soccer ball\", \"Throwing ball\", \"Playing badminton\", \"Deadlifting\"\n      ]\n    },\n    {\n      title: \"Exercising\",\n      subitems: [\n        \"Jogging\", \"Squat\", \"Yoga\", \"Zumba\", \"Tai chi\", \"Capoeira\", \"Punching bag\", \"Lunge\"\n      ]\n    },\n    {\n      title: \"Leisure\",\n      subitems: [\n        \"Blowing out candles\", \"Bouncing on trampoline\", \"Playing cards\", \"Playing controller\",\n           \"Riding mechanical bull\", \"Answering questions\"\n      ]\n    },\n    {\n      title: \"Dancing\",\n      subitems: [\n        \"Belly dancing\", \"Breakdancing\", \"Cheerleading\", \"Dancing ballet\", \"Dancing gangnam style\",\n           \"Dancing macarena\", \"Robot dancing\", \"Swing dancing\", \"Tap dancing\", \"Tango dancing\"\n      ]\n    },\n    {\n      title: \"Music\",\n      subitems: [\n        \"Beatboxing\", \"Playing accordion\", \"Playing drums\", \"Playing flute\",\n         \"Playing guitar\", \"Playing harmonica\", \"Playing piano\", \"Playing saxophone\", \"Singing\"\n      ]\n    },\n    {\n      title: \"Beauty and Hygiene\",\n      subitems: [\n        \"Applying cream\", \"Braiding hair\", \"Brushing hair\", \"Brushing teeth\", \"Curling hair\",\n        \"Doing nails\", \"Filling eyebrows\", \"Shaving head\", \"Shaving legs\", \"Trimming or shaving beard\",\n        \"Washing hair\", \"Washing hands\"\n      ]\n    },\n        {\n      title: \"Hobby and Profession\",\n      subitems: [\n        \"Juggling balls\", \"Juggling soccer ball\", \"Presenting weather forecast\",\n        \"Spinning poi\", \"Air drumming\", \"Drawing\", \"Spray painting\"\n      ]\n    },\n    {\n      title: \"Movements\",\n      subitems: [\n        \"Cartwheeling\", \"Cracking neck\", \"Headbanging\", \"Pumping fist\", \"Shaking head\", \"Side kick\",\n        \"Somersaulting\", \"Stretching arm\", \"Stretching leg\", \"High kick\"\n      ]\n    },\n    {\n      title: \"Hand Movements\",\n      subitems: [\n        \"Applauding\", \"Drumming fingers\", \"Finger snapping\", \"Rock scissors paper\",\n        \"Sign language interpreting\", \"Slapping\"\n      ]\n    },\n    {\n      title: \"Household\",\n      subitems: [\n        \"Folding clothes\", \"Garbage collecting\", \"Ironing\", \"Making bed\", \"Sweeping floor\", \"Washing dishes\"\n      ]\n    },\n    {\n      title: \"Eating and Cooking\",\n      subitems: [\n        \"Drinking\", \"Drinking beer\", \"Drinking shots\", \"Eating burger\", \"Eating chips\",\n        \"Eating ice cream\", \"Making tea\", \"Peeling potatoes\"\n      ]\n    },\n    {\n      title: \"Other\",\n      subitems: [\n        \"Counting money\", \"Digging\", \"Kissing\", \"Laughing\", \"Marching\", \"Shining shoes\", \"Smoking\",\n         \"Sticking tongue out\", \"Using computer\", \"Whistling\", \"Writing\", \"Yawning\"\n      ]\n    }\n\n  ]\n}\n\n\nclass App extends React.Component {\n  state = {};\n  handleClick = e => {\n      this.setState({ [e]: !this.state[e] });\n  };\n\n  render() {\n    const items = getItems();\n    const { classes } = this.props;\n\n    const drawer = (\n      <div>\n      {items.map( item => {\n        return (\n          <div>\n            <ListItem button className={classes.item} onClick={this.handleClick.bind(this, item.title)}>\n              <ListItemText primary={item.title} />\n              { this.state[item.title]? <ExpandLess/> : <ExpandMore/>}\n            </ListItem>\n            <Collapse in={this.state[item.title]} timeout=\"auto\" unmountOnExit>\n              <List component=\"div\" disablePadding>\n                {item.subitems.map( s_item => {\n                  return (\n                    <ListItem button className={classes.nested}>\n                      <ListItemText primary={s_item}/>\n                    </ListItem>\n                  );\n                })}\n              </List>\n            </Collapse>\n          </div>\n        );\n      })}\n      </div>\n    );\n\n\n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n        open={true}\n      >\n      {drawer}\n      <Divider />\n      </Drawer>\n\n        <main className={classes.content}>\n          <HARView/>\n        </main>\n      </div>\n    );\n\n  }\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}